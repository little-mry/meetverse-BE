# Namnet på ditt workflow
name: Backend CI/CD Build, Lint, and Deploy to Render

# Triggas när en PR från 'dev' mergas in i 'main'
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build-lint-and-deploy:
    name: Build, Lint & Deploy

    # Kör BARA om PR:en mergades och kom från 'dev'
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.head.ref == 'dev'

    runs-on: ubuntu-latest

    steps:
      # Steg 1: Checka ut koden
      - name: Checkout code
        uses: actions/checkout@v4

      # Steg 2: Sätt upp Node.js (för linting)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"

      # Steg 3: Installera beroenden
      - name: Install dependencies
        run: npm ci

      # Steg 4: Kör Linter
      - name: Run Lint Check
        run: npm run lint --if-present

      # --- UPPDATERAT STEG 5 ---
      # Loggar in med dina exakta secret-namn
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Steg 6: Sätt upp Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- UPPDATERAT STEG 7 ---
      # Bygger och pushar imagen
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Använder ditt USERNAME-secret i taggen
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/meetup-backend:latest

      # --- UPPDATERAT STEG 8 ---
      # Triggar Render med din nya Deploy Hook
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
